version: "3"

services:
  caddy:
    build: ../caddy
    ports:
      - "80:80"
      - "443:443"
    environment:
      # passing through from env
      - BACKEND_SERVER_PROTOCOL
      - BACKEND_SERVER
      # - TURN_UDP_PORT
      # - TURN_TLS_PORT
      # - TURN_USER
      # - TURN_PASSWORD
    depends_on:
      - "signaling"
    volumes:
      - ~/docker-persistence/caddy:/data
      - ../caddy/Caddyfile:/etc/caddy/Caddyfile
      - ../caddy/dist:/dist
    restart: on-failure:20
  auth:
    build: ../auth
    expose:
      - "6060"
    environment:
      - ADMIN_USER
      - ADMIN_PASSWORD
      - SHARED_TURN_SECRET
    volumes:
      - ./users:/usr/app/users
    restart: on-failure:20
  coturn:
    image: instrumentisto/coturn
    network_mode: "host"
    command: [
      "--verbose",
      "--use-auth-secret", 
      "--no-cli",
      "-n",
      "--listening-port=${TURN_UDP_PORT}", 
      "--tls-listening-port=${TURN_TLS_PORT}", 
      "--realm=${BACKEND_SERVER}", 
      "--static-auth-secret=${SHARED_TURN_SECRET}",
      "--log-file=stdout"]
    restart: on-failure:20
  signaling:
    build: ../signaling-server
    # ports:
    #   - "3000:3000"
    expose:
      - "3000"
    restart: on-failure:20
  # web:
  #   environment:
  #     # passing through from env
  #     - BACKEND_SERVER_PROTOCOL
  #     - BACKEND_SERVER
  #     - TURN_UDP_PORT
  #     - TURN_TLS_PORT
  #     - TURN_USER
  #     - TURN_PASSWORD
  #   build: ../../app
  #   expose:
  #     - "8080"

# vim:set et ts=2 sw=2: